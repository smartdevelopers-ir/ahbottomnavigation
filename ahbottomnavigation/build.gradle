plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'signing'
}


ext {

    bintrayName = 'ah-bottom-navigation'

    publishedGroupId = 'com.aurelhubert'
    libraryName = 'AHBottomNavigation'
    artifact = 'ahbottomnavigation'

    libraryDescription = 'A library to reproduce the behavior of the Bottom Navigation guidelines from Material Design.'

    siteUrl = 'https://github.com/aurelhubert/ahbottomnavigation'
    gitUrl = 'https://github.com/aurelhubert/ahbottomnavigation.git'

    libraryVersion = '2.3.8'

    developerId = 'aurelhubert'
    developerName = 'Aurelien Hubert'
    developerEmail = 'aurel.hubert@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 36

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 36
        versionCode 47
        versionName "2.3.5"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    namespace 'com.aurelhubert.ahbottomnavigation'
    publishing {
        singleVariant('release') {
            withSourcesJar()
        }
    }
}

dependencies {
    implementation 'com.google.android.material:material:1.13.0'
}
version = ext.libraryVersion
group = ext.publishedGroupId
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {

                from components.release

                groupId = publishedGroupId
                artifactId = artifact

                pom {
                    name = bintrayName
                    description = libraryDescription
                    url = siteUrl

                    licenses {
                        license {
                            name = licenseName
                            url = licenseUrl

                        }
                    }
                    developers {
                        developer {
                            id = developerId
                            name = developerName
                            email = developerEmail
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/aurelhubert/ahbottomnavigation.git'
                        developerConnection = 'scm:git:ssh://github.com/aurelhubert/ahbottomnavigation.git'
                        url = gitUrl
                    }

                }
            }
        }
        repositories {
            maven {
                // change URLs to point to your repos, e.g. http://my.org/repo
                def releasesRepoUrl = "${layout.buildDirectory.asFile.get()}/repos/releases"
                def snapshotsRepoUrl = "${layout.buildDirectory.asFile.get()}/repos/snapshots"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}

signing {
    sign configurations.archives
}
// Place it at the end of the file
//if (project.rootProject.file('local.properties').exists()) {
//    apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
//    apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
//}
